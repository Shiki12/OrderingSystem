<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.dao.OrderDao">
<resultMap id="orderByCustomer" type="order">
    <id column="id" property="id"/>
    <result column="address" property="address"/>
    <result property="code" column="code"/>
    <association property="customer" javaType="customer">
        <id column="userid" property="id"/>
        <result column="username" property="name"/>
        <result column="phone" property="phone"/>
    </association>
    <collection property="products" ofType="product">
        <result column="p_name" property="name"/>
        <result column="order_number" property="number"/>
        <result column="p_price" property="price"/>
        <result property="imageUrl" column="imageurl"/>
    </collection>
</resultMap>
<!--    插入订单表-->
    <insert id="addOrder">
        insert into order_ (code,address,cstid)
        values (#{code},#{address},#{cstid});
    </insert>
    <insert id="addOrderItem">
        insert into orderitem (pid,oid,cstid,number)
        values (#{pid},#{oid},#{cstid},#{number});

    </insert>
    <insert id="addOrderChild" parameterType="orderChild">
        insert into order_ (code,address,cstid,status)
        values (#{code},#{address},#{cstid},#{status});
    </insert>

    <!-- 加上o.id 就表示同一次订单购买了哪些东西，即下单多选 能够得到完整的订单信息
     不加上就说明 这个用户买了哪些  我的想法是先不加上 可以新建一个vo用来整合这个用户购买的
     信息,不过这样的话订单的id就拿不到了，只能拿到订单的单号
    -->
    <select id="getCustomerOrderById" resultMap="orderByCustomer">

        SELECT c.id userid,c.`name` username,c.phone ,
               p.`name` p_name,p.number p_number,p.price p_price,p.imageurl,
               o.address address,o.code,
               oi.number order_number
        FROM orderitem oi,order_ o, product p ,customer c
        WHERE oi.pid=p.id AND oi.cstid=c.id AND  oi.oid=o.id AND c.id=#{id}
    </select>

    <select id="getOrderByToken" resultType="com.web.entity.Order">
        select
            o.pid,
            o.number,
            p.imageurl,
            p.`name`,
            p.price,
            c.`name` cname,
            c.phone
        FROM orderitem o,product p,customer c
        WHERE isNull(o.oid) and p.id = o.pid and c.id=o.cstid and token=#{token}
    </select>
</mapper>